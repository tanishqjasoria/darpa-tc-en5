/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.bbn.tc.schema.avro.cdm20;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** * This record is a single tuple in a run length encoding of tags */
@org.apache.avro.specific.AvroGenerated
public class TagRunLengthTuple extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4520445966096429235L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TagRunLengthTuple\",\"namespace\":\"com.bbn.tc.schema.avro.cdm20\",\"doc\":\"* This record is a single tuple in a run length encoding of tags\",\"fields\":[{\"name\":\"numValueElements\",\"type\":\"int\",\"default\":0},{\"name\":\"tagId\",\"type\":{\"type\":\"fixed\",\"name\":\"UUID\",\"doc\":\"* A host MUST NOT reuse UUIDs at all within their system, even\\n     * across restarts, and definitely not for 2 distinct objects\",\"size\":16}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TagRunLengthTuple> ENCODER =
      new BinaryMessageEncoder<TagRunLengthTuple>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TagRunLengthTuple> DECODER =
      new BinaryMessageDecoder<TagRunLengthTuple>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<TagRunLengthTuple> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<TagRunLengthTuple> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TagRunLengthTuple>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this TagRunLengthTuple to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a TagRunLengthTuple from a ByteBuffer. */
  public static TagRunLengthTuple fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int numValueElements;
  @Deprecated public com.bbn.tc.schema.avro.cdm20.UUID tagId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TagRunLengthTuple() {}

  /**
   * All-args constructor.
   * @param numValueElements The new value for numValueElements
   * @param tagId The new value for tagId
   */
  public TagRunLengthTuple(java.lang.Integer numValueElements, com.bbn.tc.schema.avro.cdm20.UUID tagId) {
    this.numValueElements = numValueElements;
    this.tagId = tagId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return numValueElements;
    case 1: return tagId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: numValueElements = (java.lang.Integer)value$; break;
    case 1: tagId = (com.bbn.tc.schema.avro.cdm20.UUID)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'numValueElements' field.
   * @return The value of the 'numValueElements' field.
   */
  public java.lang.Integer getNumValueElements() {
    return numValueElements;
  }

  /**
   * Sets the value of the 'numValueElements' field.
   * @param value the value to set.
   */
  public void setNumValueElements(java.lang.Integer value) {
    this.numValueElements = value;
  }

  /**
   * Gets the value of the 'tagId' field.
   * @return The value of the 'tagId' field.
   */
  public com.bbn.tc.schema.avro.cdm20.UUID getTagId() {
    return tagId;
  }

  /**
   * Sets the value of the 'tagId' field.
   * @param value the value to set.
   */
  public void setTagId(com.bbn.tc.schema.avro.cdm20.UUID value) {
    this.tagId = value;
  }

  /**
   * Creates a new TagRunLengthTuple RecordBuilder.
   * @return A new TagRunLengthTuple RecordBuilder
   */
  public static com.bbn.tc.schema.avro.cdm20.TagRunLengthTuple.Builder newBuilder() {
    return new com.bbn.tc.schema.avro.cdm20.TagRunLengthTuple.Builder();
  }

  /**
   * Creates a new TagRunLengthTuple RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TagRunLengthTuple RecordBuilder
   */
  public static com.bbn.tc.schema.avro.cdm20.TagRunLengthTuple.Builder newBuilder(com.bbn.tc.schema.avro.cdm20.TagRunLengthTuple.Builder other) {
    return new com.bbn.tc.schema.avro.cdm20.TagRunLengthTuple.Builder(other);
  }

  /**
   * Creates a new TagRunLengthTuple RecordBuilder by copying an existing TagRunLengthTuple instance.
   * @param other The existing instance to copy.
   * @return A new TagRunLengthTuple RecordBuilder
   */
  public static com.bbn.tc.schema.avro.cdm20.TagRunLengthTuple.Builder newBuilder(com.bbn.tc.schema.avro.cdm20.TagRunLengthTuple other) {
    return new com.bbn.tc.schema.avro.cdm20.TagRunLengthTuple.Builder(other);
  }

  /**
   * RecordBuilder for TagRunLengthTuple instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TagRunLengthTuple>
    implements org.apache.avro.data.RecordBuilder<TagRunLengthTuple> {

    private int numValueElements;
    private com.bbn.tc.schema.avro.cdm20.UUID tagId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.bbn.tc.schema.avro.cdm20.TagRunLengthTuple.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.numValueElements)) {
        this.numValueElements = data().deepCopy(fields()[0].schema(), other.numValueElements);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tagId)) {
        this.tagId = data().deepCopy(fields()[1].schema(), other.tagId);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing TagRunLengthTuple instance
     * @param other The existing instance to copy.
     */
    private Builder(com.bbn.tc.schema.avro.cdm20.TagRunLengthTuple other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.numValueElements)) {
        this.numValueElements = data().deepCopy(fields()[0].schema(), other.numValueElements);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.tagId)) {
        this.tagId = data().deepCopy(fields()[1].schema(), other.tagId);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'numValueElements' field.
      * @return The value.
      */
    public java.lang.Integer getNumValueElements() {
      return numValueElements;
    }

    /**
      * Sets the value of the 'numValueElements' field.
      * @param value The value of 'numValueElements'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm20.TagRunLengthTuple.Builder setNumValueElements(int value) {
      validate(fields()[0], value);
      this.numValueElements = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'numValueElements' field has been set.
      * @return True if the 'numValueElements' field has been set, false otherwise.
      */
    public boolean hasNumValueElements() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'numValueElements' field.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm20.TagRunLengthTuple.Builder clearNumValueElements() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'tagId' field.
      * @return The value.
      */
    public com.bbn.tc.schema.avro.cdm20.UUID getTagId() {
      return tagId;
    }

    /**
      * Sets the value of the 'tagId' field.
      * @param value The value of 'tagId'.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm20.TagRunLengthTuple.Builder setTagId(com.bbn.tc.schema.avro.cdm20.UUID value) {
      validate(fields()[1], value);
      this.tagId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'tagId' field has been set.
      * @return True if the 'tagId' field has been set, false otherwise.
      */
    public boolean hasTagId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'tagId' field.
      * @return This builder.
      */
    public com.bbn.tc.schema.avro.cdm20.TagRunLengthTuple.Builder clearTagId() {
      tagId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TagRunLengthTuple build() {
      try {
        TagRunLengthTuple record = new TagRunLengthTuple();
        record.numValueElements = fieldSetFlags()[0] ? this.numValueElements : (java.lang.Integer) defaultValue(fields()[0]);
        record.tagId = fieldSetFlags()[1] ? this.tagId : (com.bbn.tc.schema.avro.cdm20.UUID) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TagRunLengthTuple>
    WRITER$ = (org.apache.avro.io.DatumWriter<TagRunLengthTuple>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TagRunLengthTuple>
    READER$ = (org.apache.avro.io.DatumReader<TagRunLengthTuple>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
